/*
 * This file is generated by jOOQ.
 */
package cz.pesout.dbframeworks.jooq.generated;


import cz.pesout.dbframeworks.jooq.generated.tables.City;
import cz.pesout.dbframeworks.jooq.generated.tables.Country;
import cz.pesout.dbframeworks.jooq.generated.tables.Countrylanguage;
import cz.pesout.dbframeworks.jooq.generated.tables.records.CityRecord;
import cz.pesout.dbframeworks.jooq.generated.tables.records.CountryRecord;
import cz.pesout.dbframeworks.jooq.generated.tables.records.CountrylanguageRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * world.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CityRecord> KEY_CITY_PRIMARY = Internal.createUniqueKey(City.CITY, DSL.name("KEY_city_PRIMARY"), new TableField[] { City.CITY.ID }, true);
    public static final UniqueKey<CountryRecord> KEY_COUNTRY_PRIMARY = Internal.createUniqueKey(Country.COUNTRY, DSL.name("KEY_country_PRIMARY"), new TableField[] { Country.COUNTRY.CODE }, true);
    public static final UniqueKey<CountrylanguageRecord> KEY_COUNTRYLANGUAGE_PRIMARY = Internal.createUniqueKey(Countrylanguage.COUNTRYLANGUAGE, DSL.name("KEY_countrylanguage_PRIMARY"), new TableField[] { Countrylanguage.COUNTRYLANGUAGE.COUNTRYCODE, Countrylanguage.COUNTRYLANGUAGE.LANGUAGE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CityRecord, CountryRecord> CITY_IBFK_1 = Internal.createForeignKey(City.CITY, DSL.name("city_ibfk_1"), new TableField[] { City.CITY.COUNTRYCODE }, Keys.KEY_COUNTRY_PRIMARY, new TableField[] { Country.COUNTRY.CODE }, true);
    public static final ForeignKey<CountrylanguageRecord, CountryRecord> COUNTRYLANGUAGE_IBFK_1 = Internal.createForeignKey(Countrylanguage.COUNTRYLANGUAGE, DSL.name("countryLanguage_ibfk_1"), new TableField[] { Countrylanguage.COUNTRYLANGUAGE.COUNTRYCODE }, Keys.KEY_COUNTRY_PRIMARY, new TableField[] { Country.COUNTRY.CODE }, true);
}
