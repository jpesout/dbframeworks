/*
 * This file is generated by jOOQ.
 */
package cz.pesout.dbframeworks.jooq.generated.tables.records;


import cz.pesout.dbframeworks.jooq.generated.enums.CountrylanguageIsofficial;
import cz.pesout.dbframeworks.jooq.generated.tables.Countrylanguage;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CountrylanguageRecord extends UpdatableRecordImpl<CountrylanguageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>world.countrylanguage.CountryCode</code>.
     */
    public void setCountrycode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>world.countrylanguage.CountryCode</code>.
     */
    public String getCountrycode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>world.countrylanguage.Language</code>.
     */
    public void setLanguage(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>world.countrylanguage.Language</code>.
     */
    public String getLanguage() {
        return (String) get(1);
    }

    /**
     * Setter for <code>world.countrylanguage.IsOfficial</code>.
     */
    public void setIsofficial(CountrylanguageIsofficial value) {
        set(2, value);
    }

    /**
     * Getter for <code>world.countrylanguage.IsOfficial</code>.
     */
    public CountrylanguageIsofficial getIsofficial() {
        return (CountrylanguageIsofficial) get(2);
    }

    /**
     * Setter for <code>world.countrylanguage.Percentage</code>.
     */
    public void setPercentage(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>world.countrylanguage.Percentage</code>.
     */
    public Double getPercentage() {
        return (Double) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CountrylanguageRecord
     */
    public CountrylanguageRecord() {
        super(Countrylanguage.COUNTRYLANGUAGE);
    }

    /**
     * Create a detached, initialised CountrylanguageRecord
     */
    public CountrylanguageRecord(String countrycode, String language, CountrylanguageIsofficial isofficial, Double percentage) {
        super(Countrylanguage.COUNTRYLANGUAGE);

        setCountrycode(countrycode);
        setLanguage(language);
        setIsofficial(isofficial);
        setPercentage(percentage);
        resetChangedOnNotNull();
    }
}
